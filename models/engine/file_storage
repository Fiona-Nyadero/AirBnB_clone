#!/usr/bin/python3
"""
FileStorage - Module
Serializes instances to a JSON file and deserializes JSON file to instances
"""

import json
"""from models.base_model import BaseModel"""
from datetime import datetime

class FileStorage:
    __file_path = "file.json"
    __objects = {}

    def all(self):
        return self.__objects

    def new(self, obj):
        key = "{}.{}".format(obj.__class__.____name__, obj.id)
        self.__objects[key] = obj

    def save(self):
        """ Serializes objects to a JSON file """
        serialized_objcts = {}
        for obj_key, obj in self.__objects.items():
            serialized_objcts[obj_key] = obj.to_dict()
        with open(self.__file_path, 'w', encoding='utf-8') as f:
            json.dump(serialized_objcts, f)

    def reload(self):
        """ Deserializes the JSON file to objects if it exists """
        try:
            with open(self.__file_path, 'r', encoding='utf-8') as f:
                json_data = json.load(f)
                for key, value in json_data.items():
                    cls_name, obj_id = key.split(".")
                    obj = globals()[cls_name](**value)
                    self.__objects[key] = obj
        except FileNotFoundError:
            pass
